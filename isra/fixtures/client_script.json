[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-03-09 22:15:53.666432",
  "module": "isra",
  "name": "Sales Invoice Customize",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n\r\n    validate: function(frm) {\r\n        if (frm.is_new()) {\r\n            frm.set_value('disable_rounded_total', 1);\r\n            frm.set_df_property('disable_rounded_total', 'read_only', 1);\r\n        }\r\n    },\r\n    refresh: function(frm) {\r\n        if (frm.is_new()) {\r\n            frm.fields_dict.items.grid.get_field('item_code').get_query = function(doc, cdt, cdn) {\r\n                return {\r\n                    filters: {\r\n                        'is_sales_item': 1 // Ensure only sales items are shown\r\n                    }\r\n                };\r\n            };\r\n        }\r\n        frm.fields_dict[\"items\"].grid.get_field(\"custom_isra_uom\").get_query = function (doc, cdt, cdn) {\r\n            let row = locals[cdt][cdn];\r\n\r\n            if (!row.item_code) {\r\n                return { filters: {} };\r\n            }\r\n\r\n            return {\r\n                query: \"isra.custom.get_uoms_for_item\",\r\n                filters: { item_code: row.item_code }\r\n            };\r\n        };\r\n        \r\n    },\r\n    onload: function (frm) {\r\n        if (frm.doc.customer) {\r\n            // Call the server-side function to get the warehouse and location\r\n            frappe.call({\r\n                method: \"isra.custom.get_warehouse_and_location\", // Update with the correct path\r\n                args: {\r\n                    customer: frm.doc.customer\r\n                },\r\n                callback: function (r) {\r\n                    if (r.message) {\r\n                        const { warehouse, location, sales_in_charge, message } = r.message;\r\n\r\n                        if (warehouse && location && sales_in_charge) {\r\n                            // Set the fields in the form\r\n                            // frm.set_value(\"set_warehouse\", warehouse);\r\n                            frm.set_value(\"custom_location\", location);\r\n                            frm.set_value(\"custom_van_sales_in_charge\", sales_in_charge);\r\n                        } else {\r\n                            // Clear the fields and show a message\r\n                            // frm.set_value(\"warehouse\", null);\r\n                            frm.set_value(\"location\", null);\r\n                            frm.set_value(\"van_sales_in_charge\", null);\r\n\r\n                            if (message) {\r\n                                frappe.msgprint(__(message));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        // } else {\r\n        //     // Clear the fields if no customer is selected\r\n        //     frm.set_value(\"warehouse\", null);\r\n        //     frm.set_value(\"location\", null);\r\n        }\r\n    },\r\n});\r\n\r\nfrappe.ui.form.on(\"Sales Invoice Item\", {\r\n    item_code: function (frm, cdt, cdn) {\r\n        let row = locals[cdt][cdn];\r\n\r\n        if (row.item_code) {\r\n            // Fetch default UOM from Item doctype\r\n            frappe.call({\r\n                method: \"frappe.client.get_value\",\r\n                args: {\r\n                    doctype: \"Item\",\r\n                    filters: { name: row.item_code },\r\n                    fieldname: [\"item_name\", \"stock_uom\"],\r\n                },\r\n                callback: function (r) {\r\n                    if (r.message) {\r\n                        let item_name = r.message.item_name;\r\n                        let item_uom = r.message.stock_uom;\r\n\r\n                        // Set default UOM in the child table\r\n                        frappe.model.set_value(cdt, cdn, \"uom\", item_uom);\r\n                        frappe.model.set_value(cdt, cdn, \"custom_isra_uom\", item_uom); // Set default UOM\r\n\r\n                        // Fetch Selling Rate & Previous Invoice Rate\r\n                        frappe.call({\r\n                            method: \"isra.custom.get_sales_invoice_item_rates\",\r\n                            args: {\r\n                                item_code: row.item_code,\r\n                                price_list: frm.doc.selling_price_list, // Pass the price list from Sales Invoice\r\n                            },\r\n                            callback: function (r) {\r\n                                if (r.message) {\r\n                                    let message = `\r\n                                        <table class=\"table table-bordered\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Item Code</th>\r\n                                                    <th>Item Name</th>\r\n                                                    <th>UOM</th>\r\n                                                    <th>Selling Rate</th>\r\n                                                    <th>Previous Invoice Rate</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>${row.item_code}</td>\r\n                                                    <td>${item_name || \"N/A\"}</td>\r\n                                                    <td>${item_uom || \"N/A\"}</td>\r\n                                                    <td>${r.message.selling_rate || \"N/A\"}</td>\r\n                                                    <td>${r.message.previous_invoice_rate || \"N/A\"}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    `;\r\n\r\n                                    frappe.msgprint({\r\n                                        title: __(\"Item Rates\"),\r\n                                        indicator: \"blue\",\r\n                                        message: message,\r\n                                    });\r\n\r\n                                    // Set the rate in the child table\r\n                                    frappe.model.set_value(cdt, cdn, \"rate\", r.message.selling_rate);\r\n                                }\r\n                            },\r\n                        });\r\n                    }\r\n                },\r\n            });\r\n\r\n            // // Set query for 'custom_isra_uom' to filter based on item_code\r\n            // frappe.meta.get_docfield(\"Sales Invoice Item\", \"custom_isra_uom\", frm.doc.name).get_query = function (doc, cdt, cdn) {\r\n            //     let row = locals[cdt][cdn];\r\n            //     return {\r\n            //         filters: {\r\n            //             parent: row.item_code, // Filter UOMs based on selected item\r\n            //             parentfield: \"uoms\", // Ensure this matches the UOM child table field in Item doctype\r\n            //         },\r\n            //     };\r\n            // };\r\n\r\n            // // Reset UOM field to avoid stale data\r\n            // frappe.model.set_value(cdt, cdn, \"custom_isra_uom\", null);\r\n        }\r\n    },\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2025-02-28 21:28:01.238494",
  "module": "isra",
  "name": "Sales Order Customize",
  "script": "frappe.ui.form.on('Sales Order', {\r\n    validate: function(frm) {\r\n        if (frm.is_new()) {\r\n            frm.set_value('disable_rounded_total', 1);\r\n            frm.set_df_property('disable_rounded_total', 'read_only', 1);\r\n        }\r\n    },\r\n    refresh: function(frm) {\r\n        // Ensure the script runs only when creating a new Sales Order\r\n        if (frm.is_new()) {\r\n            frm.fields_dict.items.grid.get_field('item_code').get_query = function(doc, cdt, cdn) {\r\n                return {\r\n                    filters: {\r\n                        'is_sales_item': 1 // Ensure only sales items are shown\r\n                    }\r\n                };\r\n            };\r\n        }\r\n    },\r\n    customer: function (frm) {\r\n        if (frm.doc.customer) {\r\n            // Call the server-side function to get the warehouse and location\r\n            frappe.call({\r\n                method: \"isra.custom.get_warehouse_and_location\", // Update with the correct path\r\n                args: {\r\n                    customer: frm.doc.customer\r\n                },\r\n                callback: function (r) {\r\n                    if (r.message) {\r\n                        const { warehouse, location, sales_in_charge, message } = r.message;\r\n\r\n                        if (warehouse && location && sales_in_charge) {\r\n                            // Set the fields in the form\r\n                            frm.set_value(\"set_warehouse\", warehouse);\r\n                            frm.set_value(\"custom_location\", location);\r\n                            frm.set_value(\"custom_van_sales_in_charge\", sales_in_charge);\r\n                        } \r\n                        // else {\r\n                        //     // Clear the fields and show a message\r\n                        //     frm.set_value(\"warehouse\", null);\r\n                        //     frm.set_value(\"location\", null);\r\n                        //     frm.set_value(\"van_sales_in_charge\", null);\r\n\r\n                        //     if (message) {\r\n                        //         frappe.msgprint(__(message));\r\n                        //     }\r\n                        // }\r\n                    }\r\n                }\r\n            });\r\n        } \r\n        // else {\r\n        //     // Clear the fields if no customer is selected\r\n        //     frm.set_value(\"warehouse\", null);\r\n        //     frm.set_value(\"location\", null);\r\n        // }\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Sales Order Item', {\r\n    item_code: function(frm, cdt, cdn) {\r\n        let item_row = frappe.get_doc(cdt, cdn);\r\n        if (item_row.item_code) {\r\n            // Fetch item details (item_name, stock_uom, actual_qty)\r\n            frappe.call({\r\n                method: 'frappe.client.get_value',\r\n                args: {\r\n                    doctype: 'Item',\r\n                    filters: { name: item_row.item_code },\r\n                    fieldname: ['item_name', 'stock_uom',\"qty\"]\r\n                },\r\n                callback: function(r) {\r\n                    if (r.message) {\r\n                        let item_name = r.message.item_name;\r\n                        let item_uom = r.message.stock_uom;\r\n\r\n                        // Fetch rates and stock quantity\r\n                        frappe.call({\r\n                            method: 'isra.custom.get_sales_order_item_rates', // Path to the server-side method\r\n                            args: {\r\n                                item_code: item_row.item_code,\r\n                                price_list: frm.doc.selling_price_list, // Pass the price list from the Sales Order\r\n                                warehouse: frm.doc.set_warehouse // Pass warehouse to fetch stock qty\r\n                            },\r\n                            callback: function(r) {\r\n                                if (r.message) {\r\n                                    let actual_qty = r.message.qty || 'N/A';\r\n\r\n                                    // Prepare the message for the popup\r\n                                    let message = `\r\n                                        <table class=\"table table-bordered\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Item Code</th>\r\n                                                    <th>Item Name</th>\r\n                                                    <th>UOM</th>\r\n                                                    <th>Stock Qty</th>\r\n                                                    <th>Selling Rate</th>\r\n                                                    <th>Previous Order Rate</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>${item_row.item_code}</td>\r\n                                                    <td>${item_name || 'N/A'}</td>\r\n                                                    <td>${item_uom || 'N/A'}</td>\r\n                                                    <td>${actual_qty}</td>\r\n                                                    <td>${r.message.selling_rate || 'N/A'}</td>\r\n                                                    <td>${r.message.previous_invoice_rate || 'N/A'}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    `;\r\n\r\n                                    // Show the details in a popup\r\n                                    frappe.msgprint({\r\n                                        title: __('Item Details'),\r\n                                        indicator: 'blue',\r\n                                        message: message\r\n                                    });\r\n\r\n                                    // Set values for rate, uom, and qty fields\r\n                                    frappe.model.set_value(cdt, cdn, 'rate', r.message.selling_rate);\r\n                                    frappe.model.set_value(cdt, cdn, 'uom', item_uom);\r\n                                    frappe.model.set_value(cdt, cdn, 'qty', actual_qty);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nfunction filter_uom_options(frm, cdt, cdn, item_code, default_uom) {\r\n    frappe.call({\r\n        method: 'frappe.client.get_list',\r\n        args: {\r\n            doctype: 'UOM Conversion Detail',\r\n            filters: { parent: item_code },\r\n            fields: ['uom']\r\n        },\r\n        callback: function(r) {\r\n            if (r.message) {\r\n                let uom_list = r.message.map(u => u.uom);\r\n\r\n                // Set query for UOM field to filter available UOMs\r\n                frm.fields_dict.items.grid.get_field('uom').get_query = function() {\r\n                    return {\r\n                        filters: [['UOM', 'name', 'in', uom_list]]\r\n                    };\r\n                };\r\n\r\n                // Check if the default UOM is in the list, otherwise set the first available UOM\r\n                let selected_uom = uom_list.includes(default_uom) ? default_uom : uom_list[0] || null;\r\n\r\n                // Set the UOM field only if a valid UOM is available\r\n                if (selected_uom) {\r\n                    frappe.model.set_value(cdt, cdn, 'uom', selected_uom);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2025-02-28 23:06:48.283968",
  "module": "isra",
  "name": "Purchase Order Customize",
  "script": "frappe.ui.form.on('Purchase Order', {\n\tvalidate: function(frm) {\n        if (frm.is_new()) {\n            frm.set_value('disable_rounded_total', 1);\n            frm.set_df_property('disable_rounded_total', 'read_only', 1);\n        }\n    },\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-02-28 23:06:44.698769",
  "module": "isra",
  "name": "Purchase Invoice Customize",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tvalidate: function(frm) {\n        if (frm.is_new()) {\n            frm.set_value('disable_rounded_total', 1);\n            frm.set_df_property('disable_rounded_total', 'read_only', 1);\n        }\n    },\n})",
  "view": "Form"
 }
]