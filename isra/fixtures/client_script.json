[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-06-12 22:18:57.000541",
  "module": "isra",
  "name": "Sales Invoice Customize",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n\r\n    validate: function(frm) {\r\n        if (frm.is_new()) {\r\n            frm.set_value('disable_rounded_total', 1);\r\n            frm.set_df_property('disable_rounded_total', 'read_only', 1);\r\n        }\r\n    },\r\n    refresh: function(frm) {\r\n        if (frm.is_new()) {\r\n            frm.fields_dict.items.grid.get_field('item_code').get_query = function(doc, cdt, cdn) {\r\n                return {\r\n                    filters: {\r\n                        'is_sales_item': 1 // Ensure only sales items are shown\r\n                    }\r\n                };\r\n            };\r\n        }\r\n        frm.fields_dict[\"items\"].grid.get_field(\"uom\").get_query = function (doc, cdt, cdn) {\r\n            let row = locals[cdt][cdn];\r\n\r\n            if (!row.item_code) {\r\n                return { filters: {} };\r\n            }\r\n\r\n            return {\r\n                query: \"isra.custom.get_uoms_for_item\",\r\n                filters: { item_code: row.item_code }\r\n            };\r\n        };\r\n        \r\n    },\r\n    onload: function (frm) {\r\n        if (frm.is_new && frm.doc.customer){\r\n        \r\n            frappe.call({\r\n                method: \"isra.custom.get_warehouse_and_location\",\r\n                args: {\r\n                    customer: frm.doc.customer\r\n                },\r\n                callback: function (r) {\r\n                    if (r.message != \"None\") {\r\n                        const { warehouse, location, sales_in_charge, message } = r.message;\r\n\r\n                        if (warehouse && location && sales_in_charge) {\r\n                            frm.set_value(\"custom_warehouse\", warehouse);\r\n                            frm.set_value(\"custom_location\", location);\r\n                            frm.set_value(\"custom_van_sales_in_charge\", sales_in_charge);\r\n                            frm.set_df_property('custom_warehouse', 'read_only', 1);\r\n                        }\r\n                        // else {\r\n                            // frm.set_value(\"custom_warehouse\", null);\r\n                            // frm.set_value(\"custom_location\", null);\r\n                            // frm.set_value(\"custom_van_sales_in_charge\", null);\r\n\r\n                            // if (message) {\r\n                            //     frappe.msgprint(__(message));\r\n                            // }\r\n                        // }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n});\r\n\r\nfrappe.ui.form.on(\"Sales Invoice Item\", {\r\n    item_code: function (frm, cdt, cdn) {\r\n        let row = locals[cdt][cdn];\r\n        \r\n        if (row.item_code) {\r\n\t\t\tfrappe.call({\r\n\t\t\t\tmethod: \"isra.custom.get_latest_purchase_rate\", // Make sure this path is correct\r\n\t\t\t\targs: {\r\n\t\t\t\t\titem_code: row.item_code\r\n\t\t\t\t},\r\n\t\t\t\tcallback: function(r) {\r\n\t\t\t\t\tif (r.message !== undefined) {\r\n\t\t\t\t\t\tfrappe.model.set_value(cdt, cdn, \"custom_isra_incoming_rate\", r.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n        \r\n        \r\n        \r\n        if (row.item_code) {\r\n            // Fetch the default warehouse from Warehouse doctype\r\n            frappe.call({\r\n                method: \"frappe.client.get_value\",\r\n                args: {\r\n                    doctype: \"Warehouse\",\r\n                    filters: { custom_is_default_warehouse: 1 },\r\n                    fieldname: \"name\",\r\n                },\r\n                callback: function (warehouse_res) {\r\n                    let default_warehouse = warehouse_res.message ? warehouse_res.message.name : \"N/A\";\r\n                    let selected_warehouse = frm.doc.custom_warehouse || \"N/A\"; // Get from parent doctype\r\n\r\n                    // Fetch default UOM from Item doctype\r\n                    frappe.call({\r\n                        method: \"frappe.client.get_value\",\r\n                        args: {\r\n                            doctype: \"Item\",\r\n                            filters: { name: row.item_code },\r\n                            fieldname: [\"item_name\", \"stock_uom\"],\r\n                        },\r\n                        callback: function (item_res) {\r\n                            let item_name = item_res.message.item_name;\r\n                            let item_uom = item_res.message.stock_uom;\r\n\r\n                            // Set default UOM in the child table\r\n                            frappe.model.set_value(cdt, cdn, \"custom_isra_uom\", item_uom);\r\n\r\n                            // Fetch Selling Rate & Previous Invoice Rate\r\n                            frappe.call({\r\n                                method: \"isra.custom.get_sales_invoice_item_rates\",\r\n                                args: {\r\n                                    item_code: row.item_code,\r\n                                    price_list: frm.doc.selling_price_list,\r\n                                    customer: frm.doc.customer\r\n                                },\r\n                                callback: function (rate_response) {\r\n                                    if (rate_response.message) {\r\n                                        let selling_rate = rate_response.message.selling_rate || \"N/A\";\r\n                                        let previous_invoice_rate = rate_response.message.previous_invoice_rate || \"N/A\";\r\n\r\n                                        // Fetch stock balance for Default Warehouse\r\n                                        frappe.call({\r\n                                            method: \"erpnext.stock.utils.get_stock_balance\",\r\n                                            args: {\r\n                                                item_code: row.item_code,\r\n                                                warehouse: default_warehouse\r\n                                            },\r\n                                            callback: function (default_stock_res) {\r\n                                                let default_stock_qty = default_stock_res.message || 0;\r\n\r\n                                                // Fetch stock balance for Selected Warehouse\r\n                                                frappe.call({\r\n                                                    method: \"erpnext.stock.utils.get_stock_balance\",\r\n                                                    args: {\r\n                                                        item_code: row.item_code,\r\n                                                        warehouse: selected_warehouse\r\n                                                    },\r\n                                                    callback: function (selected_stock_res) {\r\n                                                        let selected_stock_qty = selected_stock_res.message || 0;\r\n\r\n                                                        // let message = `\r\n                                                        //     <div style=\"overflow-x: auto;\">\r\n                                                        //         <table class=\"table table-bordered\" style=\"width: 100%; text-align: center;\">\r\n                                                        //             <thead>\r\n                                                        //                 <tr>\r\n                                                        //                     <th style=\"width: 120px;\">Item Code</th>\r\n                                                        //                     <th style=\"width: 150px;\">Item Name</th>\r\n                                                        //                     <th style=\"width: 80px;\">UOM</th>\r\n                                                        //                     <th style=\"width: 120px;\">Selling Rate</th>\r\n                                                        //                     <th style=\"width: 150px;\">Previous Rate</th>\r\n                                                        //                     <th style=\"width: 180px;\">Default Warehouse</th>\r\n                                                        //                     <th style=\"width: 150px;\">Stock QTY</th>\r\n                                                        //                     <th style=\"width: 180px;\">Selected Warehouse</th>\r\n                                                        //                     <th style=\"width: 150px;\">Stock QTY</th>\r\n                                                        //                 </tr>\r\n                                                        //             </thead>\r\n                                                        //             <tbody>\r\n                                                        //                 <tr>\r\n                                                        //                     <td>${row.item_code}</td>\r\n                                                        //                     <td>${item_name || \"N/A\"}</td>\r\n                                                        //                     <td>${item_uom || \"N/A\"}</td>\r\n                                                        //                     <td>${selling_rate}</td>\r\n                                                        //                     <td>${previous_invoice_rate}</td>\r\n                                                        //                     <td>${default_warehouse}</td>\r\n                                                        //                     <td>${default_stock_qty}</td>\r\n                                                        //                     <td>${selected_warehouse}</td>\r\n                                                        //                     <td>${selected_stock_qty}</td>\r\n                                                        //                 </tr>\r\n                                                        //             </tbody>\r\n                                                        //         </table>\r\n                                                        //     </div>\r\n                                                        // `;\r\n\r\n                                                        // frappe.msgprint({\r\n                                                        //     title: __(\"Item Rates & Stock\"),\r\n                                                        //     indicator: \"blue\",\r\n                                                        //     message: message,\r\n                                                        // });\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                },\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    },\r\n    custom_view_item_stock: function(frm, cdt, cdn) {\r\n        let row = locals[cdt][cdn];\r\n        if (row.item_code) {\r\n            // Fetch the default warehouse from Warehouse doctype\r\n            frappe.call({\r\n                method: \"frappe.client.get_value\",\r\n                args: {\r\n                    doctype: \"Warehouse\",\r\n                    filters: { custom_is_default_warehouse: 1 },\r\n                    fieldname: \"name\",\r\n                },\r\n                callback: function (warehouse_res) {\r\n                    let default_warehouse = warehouse_res.message ? warehouse_res.message.name : \"N/A\";\r\n                    let selected_warehouse = frm.doc.custom_warehouse || \"N/A\";\r\n\r\n                    // Fetch default UOM from Item doctype\r\n                    frappe.call({\r\n                        method: \"frappe.client.get_value\",\r\n                        args: {\r\n                            doctype: \"Item\",\r\n                            filters: { name: row.item_code },\r\n                            fieldname: [\"item_name\", \"stock_uom\"],\r\n                        },\r\n                        callback: function (item_res) {\r\n                            let item_name = item_res.message.item_name;\r\n                            let item_uom = item_res.message.stock_uom;\r\n\r\n                            // Set default UOM in the child table\r\n                            frappe.model.set_value(cdt, cdn, \"custom_isra_uom\", item_uom);\r\n\r\n                            // Fetch Selling Rate & Previous Invoice Rate\r\n                            frappe.call({\r\n                                method: \"isra.custom.get_sales_invoice_item_rates\",\r\n                                args: {\r\n                                    item_code: row.item_code,\r\n                                    price_list: frm.doc.selling_price_list,\r\n                                    customer: frm.doc.customer\r\n                                },\r\n                                callback: function (rate_response) {\r\n                                    if (rate_response.message) {\r\n                                        let selling_rate = rate_response.message.selling_rate || \"N/A\";\r\n                                        let previous_invoice_rate = rate_response.message.previous_invoice_rate || \"N/A\";\r\n\r\n                                        // Fetch stock balance for Default Warehouse\r\n                                        frappe.call({\r\n                                            method: \"erpnext.stock.utils.get_stock_balance\",\r\n                                            args: {\r\n                                                item_code: row.item_code,\r\n                                                warehouse: default_warehouse\r\n                                            },\r\n                                            callback: function (default_stock_res) {\r\n                                                let default_stock_qty = default_stock_res.message || 0;\r\n\r\n                                                // Fetch stock balance for Selected Warehouse\r\n                                                frappe.call({\r\n                                                    method: \"erpnext.stock.utils.get_stock_balance\",\r\n                                                    args: {\r\n                                                        item_code: row.item_code,\r\n                                                        warehouse: selected_warehouse\r\n                                                    },\r\n                                                    callback: function (selected_stock_res) {\r\n                                                        let selected_stock_qty = selected_stock_res.message || 0;\r\n\r\n                                                        let message = `\r\n                                                            <div style=\"overflow-x: auto;\">\r\n                                                                <table class=\"table table-bordered\" style=\"width: 100%; text-align: center;\">\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th style=\"width: 120px;\">Item Code</th>\r\n                                                                            <th style=\"width: 150px;\">Item Name</th>\r\n                                                                            <th style=\"width: 80px;\">UOM</th>\r\n                                                                            <th style=\"width: 120px;\">Selling Rate</th>\r\n                                                                            <th style=\"width: 150px;\">Previous Rate</th>\r\n                                                                            <th style=\"width: 180px;\">Default Warehouse</th>\r\n                                                                            <th style=\"width: 150px;\">Stock QTY</th>\r\n                                                                            <th style=\"width: 180px;\">Selected Warehouse</th>\r\n                                                                            <th style=\"width: 150px;\">Stock QTY</th>\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <tbody>\r\n                                                                        <tr>\r\n                                                                            <td>${row.item_code}</td>\r\n                                                                            <td>${item_name || \"N/A\"}</td>\r\n                                                                            <td>${item_uom || \"N/A\"}</td>\r\n                                                                            <td>${selling_rate}</td>\r\n                                                                            <td>${previous_invoice_rate}</td>\r\n                                                                            <td>${default_warehouse}</td>\r\n                                                                            <td>${default_stock_qty}</td>\r\n                                                                            <td>${selected_warehouse}</td>\r\n                                                                            <td>${selected_stock_qty}</td>\r\n                                                                        </tr>\r\n                                                                    </tbody>\r\n                                                                </table>\r\n                                                            </div>\r\n                                                        `;\r\n\r\n                                                        frappe.msgprint({\r\n                                                            title: __(\"Item Rates & Stock\"),\r\n                                                            indicator: \"blue\",\r\n                                                            message: message,\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                },\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2025-06-11 21:46:16.611183",
  "module": "isra",
  "name": "Sales Order Customize",
  "script": "frappe.ui.form.on('Sales Order', {\r\n    validate: function(frm) {\r\n        if (frm.is_new()) {\r\n            frm.set_value('disable_rounded_total', 1);\r\n            frm.set_df_property('disable_rounded_total', 'read_only', 1);\r\n        }\r\n    },\r\n    refresh: function(frm) {\r\n        // Ensure the script runs only when creating a new Sales Order\r\n        if (frm.is_new()) {\r\n            frm.fields_dict.items.grid.get_field('item_code').get_query = function(doc, cdt, cdn) {\r\n                return {\r\n                    filters: {\r\n                        'is_sales_item': 1 // Ensure only sales items are shown\r\n                    }\r\n                };\r\n            };\r\n        }\r\n        frm.fields_dict[\"items\"].grid.get_field(\"uom\").get_query = function (doc, cdt, cdn) {\r\n            let row = locals[cdt][cdn];\r\n\r\n            if (!row.item_code) {\r\n                return { filters: {} };\r\n            }\r\n\r\n            return {\r\n                query: \"isra.custom.get_uoms_for_item\",\r\n                filters: { item_code: row.item_code }\r\n            };\r\n        };\r\n    },\r\n    customer: function (frm) {\r\n        if (frm.doc.customer) {\r\n            // Call the server-side function to get the warehouse and location\r\n            frappe.call({\r\n                method: \"isra.custom.get_warehouse_and_location\", // Update with the correct path\r\n                args: {\r\n                    customer: frm.doc.customer\r\n                },\r\n                callback: function (r) {\r\n                    if (r.message) {\r\n                        const { warehouse, location, sales_in_charge, message } = r.message;\r\n\r\n                        if (warehouse && location && sales_in_charge) {\r\n                            // Set the fields in the form\r\n                            frm.set_value(\"set_warehouse\", warehouse);\r\n                            frm.set_value(\"custom_location\", location);\r\n                            frm.set_value(\"custom_van_sales_in_charge\", sales_in_charge);\r\n                        } \r\n                        // else {\r\n                        //     // Clear the fields and show a message\r\n                        //     frm.set_value(\"warehouse\", null);\r\n                        //     frm.set_value(\"location\", null);\r\n                        //     frm.set_value(\"van_sales_in_charge\", null);\r\n\r\n                        //     if (message) {\r\n                        //         frappe.msgprint(__(message));\r\n                        //     }\r\n                        // }\r\n                    }\r\n                }\r\n            });\r\n        } \r\n        // else {\r\n        //     // Clear the fields if no customer is selected\r\n        //     frm.set_value(\"warehouse\", null);\r\n        //     frm.set_value(\"location\", null);\r\n        // }\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Sales Order Item', {\r\n    item_code: function(frm, cdt, cdn) {\r\n        let item_row = frappe.get_doc(cdt, cdn);\r\n        if (item_row.item_code) {\r\n            // Fetch Item details: item_name, stock_uom\r\n            frappe.call({\r\n                method: 'frappe.client.get_value',\r\n                args: {\r\n                    doctype: 'Item',\r\n                    filters: { name: item_row.item_code },\r\n                    fieldname: ['item_name', 'stock_uom']\r\n                },\r\n                callback: function(v) {\r\n                    if (v.message) {\r\n                        let item_name = v.message.item_name;\r\n                        let item_uom = v.message.stock_uom;\r\n\r\n                        // Fetch Selling Rate and Previous Order Rate\r\n                        frappe.call({\r\n                            method: 'isra.custom.get_sales_order_item_rates', // Path to the server-side method\r\n                            args: {\r\n                                item_code: item_row.item_code,\r\n                                price_list: frm.doc.selling_price_list, // Pass the price list from Sales Order\r\n                                customer: frm.doc.customer\r\n                            },\r\n                            callback: function(r) {\r\n                                if (r.message) {\r\n                                    // Fetch Default Warehouse\r\n                                    frappe.call({\r\n                                        method: 'frappe.client.get_value',\r\n                                        args: {\r\n                                            doctype: 'Warehouse',\r\n                                            filters: { custom_is_default_warehouse: 1 },\r\n                                            fieldname: 'name'\r\n                                        },\r\n                                        callback: function(w_res) {\r\n                                            let default_warehouse = w_res.message ? w_res.message.name : \"N/A\";\r\n                                            let selected_warehouse = frm.doc.set_warehouse || \"N/A\"; // Get from parent doctype\r\n\r\n                                            // Fetch stock balance for Default Warehouse\r\n                                            frappe.call({\r\n                                                method: \"erpnext.stock.utils.get_stock_balance\",\r\n                                                args: {\r\n                                                    item_code: item_row.item_code,\r\n                                                    warehouse: default_warehouse\r\n                                                },\r\n                                                callback: function (default_stock_res) {\r\n                                                    let default_stock_qty = default_stock_res.message || 0;\r\n\r\n                                                    // Fetch stock balance for Selected Warehouse\r\n                                                    frappe.call({\r\n                                                        method: \"erpnext.stock.utils.get_stock_balance\",\r\n                                                        args: {\r\n                                                            item_code: item_row.item_code,\r\n                                                            warehouse: selected_warehouse\r\n                                                        },\r\n                                                        callback: function (selected_stock_res) {\r\n                                                            let selected_stock_qty = selected_stock_res.message || 0;\r\n\r\n                                                            let message = `\r\n                                                                <div style=\"overflow-x: auto;\">\r\n                                                                    <table class=\"table table-bordered\" style=\"width: 100%; text-align: center;\">\r\n                                                                        <thead>\r\n                                                                            <tr>\r\n                                                                                <th style=\"width: 120px;\">Item Code</th>\r\n                                                                                <th style=\"width: 150px;\">Item Name</th>\r\n                                                                                <th style=\"width: 80px;\">UOM</th>\r\n                                                                                <th style=\"width: 120px;\">Selling Rate</th>\r\n                                                                                <th style=\"width: 150px;\">Previous Rate</th>\r\n                                                                                <th style=\"width: 180px;\">Default Warehouse</th>\r\n                                                                                <th style=\"width: 150px;\">Stock QTY</th>\r\n                                                                                <th style=\"width: 180px;\">Selected Warehouse</th>\r\n                                                                                <th style=\"width: 150px;\">Stock QTY</th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody>\r\n                                                                            <tr>\r\n                                                                                <td>${item_row.item_code}</td>\r\n                                                                                <td>${item_name || \"N/A\"}</td>\r\n                                                                                <td>${item_uom || \"N/A\"}</td>\r\n                                                                                <td>${r.message.selling_rate || \"N/A\"}</td>\r\n                                                                                <td>${r.message.previous_invoice_rate || \"N/A\"}</td>\r\n                                                                                <td>${default_warehouse}</td>\r\n                                                                                <td>${default_stock_qty}</td>\r\n                                                                                <td>${selected_warehouse}</td>\r\n                                                                                <td>${selected_stock_qty}</td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            `;\r\n\r\n                                                            frappe.msgprint({\r\n                                                                title: __(\"Item Rates & Stock\"),\r\n                                                                indicator: \"blue\",\r\n                                                                message: message,\r\n                                                            });\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    custom_stock: function(frm, cdt, cdn) {\r\n        let row = locals[cdt][cdn];\r\n        if (row.item_code) {\r\n            // Fetch the default warehouse from Warehouse doctype\r\n            frappe.call({\r\n                method: \"frappe.client.get_value\",\r\n                args: {\r\n                    doctype: \"Warehouse\",\r\n                    filters: { custom_is_default_warehouse: 1 },\r\n                    fieldname: \"name\",\r\n                },\r\n                callback: function (warehouse_res) {\r\n                    let default_warehouse = warehouse_res.message ? warehouse_res.message.name : \"N/A\";\r\n                    let selected_warehouse = frm.doc.custom_warehouse || \"N/A\";\r\n\r\n                    // Fetch default UOM from Item doctype\r\n                    frappe.call({\r\n                        method: \"frappe.client.get_value\",\r\n                        args: {\r\n                            doctype: \"Item\",\r\n                            filters: { name: row.item_code },\r\n                            fieldname: [\"item_name\", \"stock_uom\"],\r\n                        },\r\n                        callback: function (item_res) {\r\n                            let item_name = item_res.message.item_name;\r\n                            let item_uom = item_res.message.stock_uom;\r\n\r\n                            // Set default UOM in the child table\r\n                            frappe.model.set_value(cdt, cdn, \"custom_isra_uom\", item_uom);\r\n\r\n                            // Fetch Selling Rate & Previous Invoice Rate\r\n                            frappe.call({\r\n                                method: \"isra.custom.get_sales_invoice_item_rates\",\r\n                                args: {\r\n                                    item_code: row.item_code,\r\n                                    price_list: frm.doc.selling_price_list,\r\n                                    customer: frm.doc.customer\r\n                                },\r\n                                callback: function (rate_response) {\r\n                                    if (rate_response.message) {\r\n                                        let selling_rate = rate_response.message.selling_rate || \"N/A\";\r\n                                        let previous_invoice_rate = rate_response.message.previous_invoice_rate || \"N/A\";\r\n\r\n                                        // Fetch stock balance for Default Warehouse\r\n                                        frappe.call({\r\n                                            method: \"erpnext.stock.utils.get_stock_balance\",\r\n                                            args: {\r\n                                                item_code: row.item_code,\r\n                                                warehouse: default_warehouse\r\n                                            },\r\n                                            callback: function (default_stock_res) {\r\n                                                let default_stock_qty = default_stock_res.message || 0;\r\n\r\n                                                // Fetch stock balance for Selected Warehouse\r\n                                                frappe.call({\r\n                                                    method: \"erpnext.stock.utils.get_stock_balance\",\r\n                                                    args: {\r\n                                                        item_code: row.item_code,\r\n                                                        warehouse: selected_warehouse\r\n                                                    },\r\n                                                    callback: function (selected_stock_res) {\r\n                                                        let selected_stock_qty = selected_stock_res.message || 0;\r\n\r\n                                                        let message = `\r\n                                                            <div style=\"overflow-x: auto;\">\r\n                                                                <table class=\"table table-bordered\" style=\"width: 100%; text-align: center;\">\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th style=\"width: 120px;\">Item Code</th>\r\n                                                                            <th style=\"width: 150px;\">Item Name</th>\r\n                                                                            <th style=\"width: 80px;\">UOM</th>\r\n                                                                            <th style=\"width: 120px;\">Selling Rate</th>\r\n                                                                            <th style=\"width: 150px;\">Previous Rate</th>\r\n                                                                            <th style=\"width: 180px;\">Default Warehouse</th>\r\n                                                                            <th style=\"width: 150px;\">Stock QTY</th>\r\n                                                                            <th style=\"width: 180px;\">Selected Warehouse</th>\r\n                                                                            <th style=\"width: 150px;\">Stock QTY</th>\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <tbody>\r\n                                                                        <tr>\r\n                                                                            <td>${row.item_code}</td>\r\n                                                                            <td>${item_name || \"N/A\"}</td>\r\n                                                                            <td>${item_uom || \"N/A\"}</td>\r\n                                                                            <td>${selling_rate}</td>\r\n                                                                            <td>${previous_invoice_rate}</td>\r\n                                                                            <td>${default_warehouse}</td>\r\n                                                                            <td>${default_stock_qty}</td>\r\n                                                                            <td>${selected_warehouse}</td>\r\n                                                                            <td>${selected_stock_qty}</td>\r\n                                                                        </tr>\r\n                                                                    </tbody>\r\n                                                                </table>\r\n                                                            </div>\r\n                                                        `;\r\n\r\n                                                        frappe.msgprint({\r\n                                                            title: __(\"Item Rates & Stock\"),\r\n                                                            indicator: \"blue\",\r\n                                                            message: message,\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                },\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nfunction filter_uom_options(frm, cdt, cdn, item_code, default_uom) {\r\n    frappe.call({\r\n        method: 'frappe.client.get_list',\r\n        args: {\r\n            doctype: 'UOM Conversion Detail',\r\n            filters: { parent: item_code },\r\n            fields: ['uom']\r\n        },\r\n        callback: function(r) {\r\n            if (r.message) {\r\n                let uom_list = r.message.map(u => u.uom);\r\n\r\n                // Set query for UOM field to filter available UOMs\r\n                frm.fields_dict.items.grid.get_field('uom').get_query = function() {\r\n                    return {\r\n                        filters: [['UOM', 'name', 'in', uom_list]]\r\n                    };\r\n                };\r\n\r\n                // Check if the default UOM is in the list, otherwise set the first available UOM\r\n                let selected_uom = uom_list.includes(default_uom) ? default_uom : uom_list[0] || null;\r\n\r\n                // Set the UOM field only if a valid UOM is available\r\n                if (selected_uom) {\r\n                    frappe.model.set_value(cdt, cdn, 'uom', selected_uom);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2025-06-12 22:21:13.605720",
  "module": "isra",
  "name": "Purchase Order Customize",
  "script": "frappe.ui.form.on('Purchase Order', {\n\tvalidate: function(frm) {\n        if (frm.is_new()) {\n            frm.set_value('disable_rounded_total', 1);\n            frm.set_df_property('disable_rounded_total', 'read_only', 1);\n        }\n    },\n    refresh: function(frm) {\n        // Ensure the script runs only when creating a new Sales Order\n        frm.fields_dict[\"items\"].grid.get_field(\"uom\").get_query = function (doc, cdt, cdn) {\n            let row = locals[cdt][cdn];\n\n            if (!row.item_code) {\n                return { filters: {} };\n            }\n\n            return {\n                query: \"isra.custom.get_uoms_for_item\",\n                filters: { item_code: row.item_code }\n            };\n        };\n    },\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-06-12 22:22:13.345115",
  "module": "isra",
  "name": "Purchase Invoice Customize",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tvalidate: function(frm) {\n        if (frm.is_new()) {\n            frm.set_value('disable_rounded_total', 1);\n            frm.set_df_property('disable_rounded_total', 'read_only', 1);\n        }\n    },\n    refresh: function(frm) {\n        // Ensure the script runs only when creating a new Sales Order\n        frm.fields_dict[\"items\"].grid.get_field(\"uom\").get_query = function (doc, cdt, cdn) {\n            let row = locals[cdt][cdn];\n\n            if (!row.item_code) {\n                return { filters: {} };\n            }\n\n            return {\n                query: \"isra.custom.get_uoms_for_item\",\n                filters: { item_code: row.item_code }\n            };\n        };\n    },\n})",
  "view": "Form"
 }
]